name: Kernel Rebase

on:
  workflow_dispatch:
    inputs:
      reponame:
        description: "Target Repository Name"
        required: true
        type: string
      ghorg:
        description: "Target Organization"
        required: true
        type: string
      repobranch:
        description: "Target Repo Branch"
        required: true
        type: string

jobs:
  kernel-rebase:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: /home/runner

    steps:

      - uses: actions/checkout@v4

      - name: Import SSH (openssh) key ðŸšš
        run: |
          cd ~
          git clone https://"$GH_PAT"@github.com/techdiwas/ssh-and-gpg-keys.git $HOME/temp
          mkdir -p $HOME/.ssh
          if [ -f $HOME/temp/id_rsa ] && [ -f $HOME/temp/id_rsa.pub ]; then
              mv $HOME/temp/id_rsa $HOME/mv/id_rsa.pub $HOME/.ssh
              chmod 600 ~/.ssh/id_rsa
              echo "-- SSH key restored."
              eval "$(ssh-agent -s)"
              ssh-add ~/.ssh/id_rsa
          elif [ -f $HOME/temp/id_ed25519 ] && [ -f $HOME/temp/id_ed25519.pub ]; then
              mv $HOME/temp/id_ed25519 $HOME/temp/id_ed25519.pub $HOME/.ssh
              chmod 600 ~/.ssh/id_ed25519
              echo "-- SSH key restored."
              eval "$(ssh-agent -s)"
              ssh-add ~/.ssh/id_ed25519
          else
              echo "-- No SSH key backup found."
          fi
          rm -rf $HOME/temp
          git config --global user.email "$USER_EMAIL"
          git config --global user.name "$USERNAME"
        env:
          USER_EMAIL: ${{ secrets.USER_EMAIL}}
          USERNAME: ${{ secrets.USERNAME }}
          GH_PAT: ${{ secrets.GH_PAT }}

      - name: Import GPG (GnuPG) key ðŸšš
        run: |
          cd ~
          git clone https://"$GH_PAT"@github.com/techdiwas/ssh-and-gpg-keys.git $HOME/temp
          if [ -f $HOME/temp/id_gpg_public ] && [ -f $HOME/temp/id_gpg_private ] && [ -f $HOME/temp/gpg_ownertrust ]; then
              mv $HOME/temp/id_gpg_public $HOME/temp/id_gpg_private $HOME/temp/gpg_ownertrust $HOME
              gpg --import ~/id_gpg_public
              gpg --import ~/id_gpg_private
              gpg --import ~/gpg_ownertrust
          else
              echo "-- No files exists in $HOME/temp to restore."
              exit 1;
          fi
          gpg_key_id=$(gpg --list-secret-keys --keyid-format=long | awk '/sec/{print $2}' | cut -d'/' -f2 | head -n1)
          # configure git for signing key
          git config --global commit.gpgsign true;
          git config --global user.signingkey $gpg_key_id;
          echo "-- Restored.";
          rm -rf $HOME/temp
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      - name: Clone script ðŸ“œ
        run: |
          cd ~
          curl -L -O https://raw.githubusercontent.com/redmi-mt6765-dev/kernel_rebase_action/refs/heads/main/kernel_rebase.sh

      - name: Run script ðŸš€
        run: |
          cd ~
          bash kernel_rebase.sh "https://github.com/MiCode/Xiaomi_Kernel_OpenSource.git" "dandelion-q-oss" "deprecated/android-4.9-q"

      - name: Push kernel sources ðŸ“¦
        run: |
          cd ~
          cd kernel
          git branch
          git checkout -b "${{ inputs.repobranch }}"
          git branch
          git remote -v
          git remote remove origin
          git remote add origin https://x-access-token:${GH_PAT}@github.com/"${{ inputs.ghorg }}"/"${{ inputs.reponame }}".git
          git remote -v
          git push -u origin "${{ inputs.repobranch }}"
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
